<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAIKaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNr
        ZXQgYmVnaW49J++7vycgaWQ9J1c1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCc/Pgo8eDp4bXBtZXRhIHht
        bG5zOng9J2Fkb2JlOm5zOm1ldGEvJyB4OnhtcHRrPSdJbWFnZTo6RXhpZlRvb2wgMTAuMTAnPgo8cmRm
        OlJERiB4bWxuczpyZGY9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMn
        PgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6cGRmPSdodHRwOi8vbnMuYWRv
        YmUuY29tL3BkZi8xLjMvJz4KICA8cGRmOkF1dGhvcj5KZXJWeDwvcGRmOkF1dGhvcj4KIDwvcmRmOkRl
        c2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6eG1wPSdodHRw
        Oi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvJz4KICA8eG1wOkNyZWF0b3JUb29sPkNhbnZhPC94bXA6Q3Jl
        YXRvclRvb2w+CiA8L3JkZjpEZXNjcmlwdGlvbj4KPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KPD94cGFj
        a2V0IGVuZD0ncic/PkUzqKwAAAlTSURBVHhe7d3ZS1VdH8Dx51/ItLLMitKIBkkrGsmCSCKjupFKmjCa
        hGi4SbJuwoKKCGnQBqJBo5QogmiCsvkmiigioigCm7R5smE9rM3ifTmPq1/7HM+0tt8ffG5eeHLvs9f3
        1XPOHv7p0KGDAmBHIICAQAABgQACAgEEBAIICAQQEAggIBBAQCCAgEAAAYEAAgIBBAQCCAgEEBAIICAQ
        QEAggIBAAAGBAAICAQQEAggIBBAQCCAgEEBAIICAQAABgQACAgEEBAIICAQQEAggIBBAQCCAgEAAAYEA
        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
        BAQC/FEH9S+OjkW6IbaO5AAAAABJRU5ErkJggg==
</value>
  </data>
</root>